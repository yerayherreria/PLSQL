--1. Escribe un procedimiento que muestre el número de empleados y el salario
--mínimo, máximo y medio del departamento de FINANZAS. Debe hacerse
--uso de cursores implícitos, es decir utilizar SELECT ... INTO.
CREATE OR REPLACE PROCEDURE FINANZAS
AS 
	EMPLEADOS NUMBER;
	SALARIO_MIN NUMBER;
	SALARIO_MAX NUMBER;
	SALARIO_MEDIA NUMBER;
BEGIN
  SELECT COUNT(NUMEM), MIN(SALAR), MAX(SALAR), AVG(NVL(SALAR,0)) INTO EMPLEADOS,SALARIO_MIN,SALARIO_MAX,SALARIO_MEDIA
  FROM EMPLEADOS WHERE NUMDE = (SELECT D.NUMDE 
 								FROM DEPARTAMENTOS d
 								WHERE UPPER(D.NOMDE) LIKE 'FINANZAS');  

  DBMS_OUTPUT.PUT_LINE ('NUMERO DE EMPLEADOS: ' || EMPLEADOS);
  DBMS_OUTPUT.PUT_LINE ('EL SALARIO MINIMO: ' || SALARIO_MIN);
  DBMS_OUTPUT.PUT_LINE ('EL SALARIO MAXIMO: ' || SALARIO_MAX);
  DBMS_OUTPUT.PUT_LINE ('EL SALARIO MINIMO: ' || SALARIO_MEDIA);
  
END;

BEGIN
	FINANZAS;
END;

--2. Escribe un procedimiento que suba un 10% el salario a los EMPLEADOS
--con más de 2 hijos y que ganen menos de 2000 €. Para cada empleado se
--mostrar por pantalla el código de empleado, nombre, salario anterior y final.
--Utiliza un cursor explícito. La transacción no puede quedarse a medias. Si
--por cualquier razón no es posible actualizar todos estos salarios, debe
--deshacerse el trabajo a la situación inicial.
CREATE OR REPLACE PROCEDURE SUBIRSALARIO
AS
	CURSOR EMPLEADO IS
	SELECT E.NUMEM ,E.NOMEM ,E.SALAR 
	FROM EMPLEADOS E
	WHERE E.NUMHI>2
	AND E.SALAR<2000;
	
	CODIGO EMPLEADOS.NUMEM%TYPE;
	NOMBRE EMPLEADOS.NOMEM%TYPE;
	SALARIO EMPLEADOS.SALAR%TYPE;
BEGIN
	OPEN EMPLEADO;
	LOOP
		FETCH EMPLEADO INTO CODIGO,NOMBRE,SALARIO;
		EXIT WHEN EMPLEADO%NOTFOUND;
		DBMS_OUTPUT.PUT_LINE('CODIGO: '|| CODIGO);
		DBMS_OUTPUT.PUT_LINE('NOMBRE: '|| NOMBRE);
		DBMS_OUTPUT.PUT_LINE('SALARIO: '|| SALARIO);
		DBMS_OUTPUT.PUT_LINE('SALARIO NUEVO: '|| (SALARIO*1.1));
	END LOOP;
	CLOSE EMPLEADO;
END;
BEGIN
	SUBIRSALARIO;
END;

--3. Escribe un procedimiento que reciba dos parámetros (número de
--departamento, hijos). Deber. crearse un cursor explícito al que se le pasarán
--estos parámetros y que mostrar. los datos de los empleados que pertenezcan
--al departamento y con el número de hijos indicados. Al final se indicar. el
--número de empleados obtenidos.
CREATE OR REPLACE PROCEDURE MOSTRAREMPLEADO(DEPART NUMBER, HIJOS NUMBER)
AS
	CURSOR EMPLEADO IS 
	SELECT *
	FROM EMPLEADOS
	WHERE NUMDE = DEPART
	AND NUMHI = HIJOS;

	CONTADOR NUMBER:=0;
BEGIN
	FOR REGISTRO IN EMPLEADO
	LOOP	
		DBMS_OUTPUT.PUT_LINE('NOMBRE: '|| REGISTRO.NUMEM);
		DBMS_OUTPUT.PUT_LINE('EXTEL: ' || REGISTRO.EXTEL);
		DBMS_OUTPUT.PUT_LINE('FECHA NACIMIENTO: '|| REGISTRO.FECNA);
		DBMS_OUTPUT.PUT_LINE('FECHA INICIO: '|| REGISTRO.FECIN);
		DBMS_OUTPUT.PUT_LINE('SALARIO: '|| REGISTRO.SALAR);
		DBMS_OUTPUT.PUT_LINE('COMIS: '|| REGISTRO.COMIS);
		DBMS_OUTPUT.PUT_LINE('NUMEROS DE HIJOS: '|| REGISTRO.NUMHI);
		DBMS_OUTPUT.PUT_LINE('NOMBRE: '|| REGISTRO.NOMEM);
		DBMS_OUTPUT.PUT_LINE('NUMERO DE DEPARTAMENTO: '|| REGISTRO.NUMDE);
		CONTADOR:=CONTADOR+1;
	END LOOP;
	DBMS_OUTPUT.PUT_LINE('NUMERO DE EMPLEADOS: '||CONTADOR);
END;
BEGIN
	MOSTRAREMPLEADO(111,0);
END;


--4. Escribe un procedimiento con un parámetro para el nombre de empleado,
--que nos muestre la edad de dicho empleado en años, meses y días.
CREATE OR REPLACE PROCEDURE EMPLEADOS.EDAD(NOMBRE VARCHAR2)
AS 
	CURSOR EMPLE IS
	SELECT E.FECNA 
	FROM EMPLEADOS e
	WHERE UPPER(E.NOMEM) LIKE NOMBRE;
	
	DIA NUMBER:=0;
	MES NUMBER:=0;
	ANNYO NUMBER:=0;
	
	ANNYO2 NUMBER:=0;

	DIA3 NUMBER:=0;
	MES3 NUMBER:=0;
	ANNYO3 NUMBER:=0;

BEGIN
	FOR EDAD IN EMPLE
	LOOP
		DIA:=EXTRACT(DAY FROM EDAD.FECNA);
		MES:=EXTRACT(MONTH FROM EDAD.FECNA);
		ANNYO:=EXTRACT(YEAR FROM EDAD.FECNA);
	
		ANNYO2:=EXTRACT(YEAR FROM SYSDATE);
		
		DIA3:=(ANNYO2-ANNYO)*365 +DIA;
		MES3:=(ANNYO2-ANNYO)*12 + MES;
		ANNYO3:=ANNYO2-ANNYO;
		
		DBMS_OUTPUT.PUT_LINE('TIENE '||DIA3||' DIAS.');
		DBMS_OUTPUT.PUT_LINE('TIENE '||MES3||' MESES.');
		DBMS_OUTPUT.PUT_LINE('TIENE '||ANNYO3||' AÑOS.');
	END LOOP;
END;
BEGIN
	EDAD('GLORIA');
END;

